<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.unstoppedable.sharding.dao.MsgHistoryMapper">
    <resultMap id="BaseResultMap" type="com.unstoppedable.sharding.model.MsgHistory">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="msg_create_time" jdbcType="TIMESTAMP" property="msgCreateTime"/>
        <result column="msg_content" jdbcType="VARCHAR" property="msgContent"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from msg_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.unstoppedable.sharding.model.MsgHistory"
            useGeneratedKeys="true">
    insert into msg_history (msg_create_time, msg_content)
    values (#{msgCreateTime,jdbcType=TIMESTAMP}, #{msgContent,jdbcType=VARCHAR})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.unstoppedable.sharding.model.MsgHistory">
    update msg_history
    set msg_create_time = #{msgCreateTime,jdbcType=TIMESTAMP},
      msg_content = #{msgContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, msg_create_time, msg_content
    from msg_history
    where id = #{id,jdbcType=BIGINT}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, msg_create_time, msg_content
    from msg_history
  </select>

    <update id="createTableIfNotExists">
      CREATE TABLE IF NOT EXISTS msg_history
      (
      id  bigint auto_increment primary key,
      msg_create_time datetime    null,
      msg_content     varchar(50) null
      )
    </update>

    <update id="truncateTable">
        TRUNCATE TABLE msg_history;
    </update>


    <update id="dropTable">
        DROP TABLE IF EXISTS msg_history;
    </update>

   <select id="selectByDateRange" resultMap="BaseResultMap">
    select id, msg_create_time, msg_content
    from msg_history where msg_create_time between #{from,jdbcType=TIMESTAMP} and  #{to,jdbcType=TIMESTAMP}
  </select>

  <select id="selectByMsgCreateTime" resultMap="BaseResultMap">
    select id, msg_create_time, msg_content
    from msg_history where msg_create_time = #{msgCreateTime,jdbcType=TIMESTAMP}
  </select>


    <select id="selectPageByRange" resultMap="BaseResultMap">
    select id, msg_create_time, msg_content
    from msg_history
    where msg_create_time between #{from,jdbcType=TIMESTAMP} and  #{to,jdbcType=TIMESTAMP}
    order by id desc
    limit #{startIndex},#{size}
  </select>

</mapper>